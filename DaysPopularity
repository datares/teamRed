{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DaysPopularity","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"-1w_3LNyNsgx","executionInfo":{"status":"ok","timestamp":1604546134445,"user_tz":480,"elapsed":19023,"user":{"displayName":"Darren Tsang","photoUrl":"","userId":"11212906947654144157"}},"outputId":"9b3c5f97-9745-47f7-b763-8f139cb60139","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.colab import auth\n","auth.authenticate_user()\n","print('Authenticated')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Authenticated\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7BOZREKjRuE3","executionInfo":{"status":"ok","timestamp":1604547396070,"user_tz":480,"elapsed":8163,"user":{"displayName":"Darren Tsang","photoUrl":"","userId":"11212906947654144157"}},"outputId":"e4a0e3ca-9265-4cab-c52b-3da6fe437b30","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.cloud import bigquery\n","from datetime import date\n","import calendar\n","import operator\n","import os\n","import sys\n","\n","\n","os.environ[\"GCLOUD_PROJECT\"] = \"DaysPopularity\"\n","\n","client = bigquery.Client()\n","\n","hn_dataset_ref = client.dataset('stackoverflow', project='bigquery-public-data')\n","hn_dset = client.get_dataset(hn_dataset_ref)\n","\n","[x.table_id for x in client.list_tables(hn_dset)]\n","hn_full = client.get_table(hn_dset.table('posts_questions'))\n","\n","print(hn_full.schema)\n","schema_subset = [col for col in hn_full.schema if col.name in (\"creation_date\", \"title\")]\n","\n","print(\"hn_full.schema\", hn_full.schema)\n","print(\"type(hn_full)\", type(hn_full))\n","\n","\n","\n","print(hn_full)\n","\n","results = [x for x in client.list_rows(hn_full, start_index=0, selected_fields=schema_subset, max_results=100000)]\n","\n","post_count = {\n","    \"Sun\": 0,\n","    \"Mon\": 0,\n","    \"Tue\": 0,\n","    \"Wed\": 0,\n","    \"Thu\": 0,\n","    \"Fri\": 0,\n","    \"Sat\": 0\n","}\n","\n","for i in results:\n","  temp_dict = dict(i)\n","  temp_date = temp_dict['creation_date']\n","  temp_day_of_week = calendar.day_name[temp_date.weekday()][0:3]\n","\n","  post_count[temp_day_of_week] += 1\n","  #print(temp_dict['title'], temp_dict['creation_date'])\n","\n","print(post_count)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[SchemaField('id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('title', 'STRING', 'NULLABLE', None, ()), SchemaField('body', 'STRING', 'NULLABLE', None, ()), SchemaField('accepted_answer_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('answer_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('comment_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('community_owned_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('creation_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('favorite_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('last_activity_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('last_edit_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('last_editor_display_name', 'STRING', 'NULLABLE', None, ()), SchemaField('last_editor_user_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('owner_display_name', 'STRING', 'NULLABLE', None, ()), SchemaField('owner_user_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('parent_id', 'STRING', 'NULLABLE', None, ()), SchemaField('post_type_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('score', 'INTEGER', 'NULLABLE', None, ()), SchemaField('tags', 'STRING', 'NULLABLE', None, ()), SchemaField('view_count', 'INTEGER', 'NULLABLE', None, ())]\n","hn_full.schema [SchemaField('id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('title', 'STRING', 'NULLABLE', None, ()), SchemaField('body', 'STRING', 'NULLABLE', None, ()), SchemaField('accepted_answer_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('answer_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('comment_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('community_owned_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('creation_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('favorite_count', 'INTEGER', 'NULLABLE', None, ()), SchemaField('last_activity_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('last_edit_date', 'TIMESTAMP', 'NULLABLE', None, ()), SchemaField('last_editor_display_name', 'STRING', 'NULLABLE', None, ()), SchemaField('last_editor_user_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('owner_display_name', 'STRING', 'NULLABLE', None, ()), SchemaField('owner_user_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('parent_id', 'STRING', 'NULLABLE', None, ()), SchemaField('post_type_id', 'INTEGER', 'NULLABLE', None, ()), SchemaField('score', 'INTEGER', 'NULLABLE', None, ()), SchemaField('tags', 'STRING', 'NULLABLE', None, ()), SchemaField('view_count', 'INTEGER', 'NULLABLE', None, ())]\n","type(hn_full) <class 'google.cloud.bigquery.table.Table'>\n","Table(TableReference(DatasetReference('bigquery-public-data', 'stackoverflow'), 'posts_questions'))\n","{'Sun': 9009, 'Mon': 15091, 'Tue': 16054, 'Wed': 18009, 'Thu': 17828, 'Fri': 15067, 'Sat': 8942}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ighMlxlAamGW","executionInfo":{"status":"ok","timestamp":1604546226352,"user_tz":480,"elapsed":614,"user":{"displayName":"Darren Tsang","photoUrl":"","userId":"11212906947654144157"}},"outputId":"2a788c2b-8c34-4734-a1c6-36186d0fecc9","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["import matplotlib.pyplot as plt\n","\n","D = post_count\n","\n","plt.bar(range(len(D)), list(D.values()), align='center')\n","plt.xticks(range(len(D)), list(D.keys()))\n","\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}